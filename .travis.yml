os:
  - linux

language: generic

services:
  - docker
env:
  global:
  - REPO_NAME=pygeo
  - DOCKER_WORKING_DIR=/home/mdolabuser/repos/$REPO_NAME
  - DOCKER_MOUNT_DIR=/home/mdolabuser/travis/$REPO_NAME
  jobs:
  - DOCKER_TAG=py2-stable
  - DOCKER_TAG=py2-latest
  - DOCKER_TAG=py2-impi

before_install:
  - docker pull mdolab/public:$DOCKER_TAG
  # run Docker, key is we mount the current Travis directory into Docker to access content of repo
  - docker run -t -d 
        --name app
        --mount "type=bind,src=$(pwd),target=$DOCKER_MOUNT_DIR"
        mdolab/public:$DOCKER_TAG
        /bin/bash

install:
  # We thrown away the existing repo in Docker, and copy the new one in-place
  - docker exec -it app /bin/bash -c "rm -rf $DOCKER_WORKING_DIR && cp -r $DOCKER_MOUNT_DIR $DOCKER_WORKING_DIR"
  # There are no build steps for this repo

script:
  # We need to source the mdolab bashrc before running anything
  - docker exec -it app /bin/bash -c ". \$HOME/.bashrc_mdolab && cd $DOCKER_WORKING_DIR/reg_tests && python run_reg_tests.py -nodiff"

after_script:
  - docker rm -f app
